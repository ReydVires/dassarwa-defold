
»Æ
Àglocal second = 3 -- value in debug
local temp_result = 0 -- temp score
local threshold_music = false -- threshold music play
local Button = require "main/gui_button"

local function create_sprite_button(node, released_animation, callback)
	return Button.create(node, callback, "sprite", hash(released_animation), hash(released_animation.."2"))
end

local function create_scale_button(node, callback)
	return Button.create(node, callback)
end

local function random_button(self)
	local btn_nodes = {
		gui.get_node("btn1/btn_node"),
		gui.get_node("btn2/btn_node"),
		gui.get_node("btn3/btn_node"),
		gui.get_node("btn4/btn_node")
	}

	local btn_poses = {
		gui.get_position(btn_nodes[1]),
		gui.get_position(btn_nodes[2]),
		gui.get_position(btn_nodes[3]),
		gui.get_position(btn_nodes[4])
	}

	local tab_operators = {}
	local idx = 0
	local filled = 1
	local temp_val = 0
	local is_duplicate = false

	tab_operators[0] = math.random(1,4)
	while filled < 4 do
		temp_val = math.random(1,4)
		while (idx < filled) and not is_duplicate do
			if tab_operators[idx] == temp_val then
				is_duplicate = true
			end
			idx = idx + 1
		end
		if not is_duplicate then
			tab_operators[filled] = temp_val
			local temp_pos = btn_poses[filled]
			btn_poses[filled] = btn_poses[tab_operators[filled]]
			btn_poses[tab_operators[filled]] = temp_pos
			filled = filled + 1
		end
		idx = 0
		is_duplicate = false
	end

	for i = 1, 4 do
		-- apply button position
		gui.set_position(btn_nodes[i], btn_poses[i])
	end
end

local function reset_tick(self)
	self.tick = 0.0
end

local function bg_game_end(self, is_on, panel)
	if panel == "win" or panel == "lose" then
		local node = gui.get_node(panel.."_box")
		gui.animate(node, "position.y", 210, gui.EASING_OUTBOUNCE, 1)
		if not self.isTimeEnd then
			gui.set_text(gui.get_node("label_text"), "NO MORE HEALTH")
		end
	else
		print ("setting bg: ",is_on,", no panel detected")
	end
	gui.set_enabled(gui.get_node("dim_bg/bg"), is_on)
end

local function is_enemy_dead(self)
	if self.enemy_hp == 0 then
		return true
	else
		return false
	end
end

local function is_player_dead(self)
	if self.player_hp == 0 then
		return true
	else
		return false
	end
end

local function player_damaged(self, amount)
	msg.post("loader:/go_audio#enemy_wave", "play_sound")
	if self.player_hp > 0.04 then -- threshold pixel handler
		if self.player_hp - amount > 0 then
			self.player_hp = self.player_hp - amount
		else
			self.player_hp = 0
			print "player blow's up"
		end
		if not self.freeze_time then
			self.freeze_time = true -- tag this for boss glitch
		end
		msg.post("/enemy#script", "do_fire")
	else
		print "player_hp is less or equal 0"
	end
end

local function enemy_damaged(self, amount)
	if self.enemy_hp > 0.04 then -- threshold pixel handler
		if self.enemy_hp - amount > 0 then
			self.enemy_hp = self.enemy_hp - amount
		else
			self.enemy_hp = 0
			print "enemy blow's up"
		end
		self.freeze_time = true
		msg.post("/player#script", "do_fire")
	else
		print "enemy_hp is less or equal 0"
	end
end

local function is_no_dead(self)
	if not is_player_dead(self) and not is_enemy_dead(self) then
		return true
	else
		return false
	end
end

local function do_attack(self, damage)
	-- because answer range is 0..3 and picked_btn 1..4
	if self.answer + 1 == self.picked_btn then
		msg.post("loader:/go_audio#fire", "play_sound")
		print "correct flag"
		enemy_damaged(self, damage)
	else
		print "wrong flag"
		local new_damage = damage
		if area_level == 5 then
			new_damage = damage / 2
		end
		player_damaged(self, new_damage)
		-- this behavior for enemy [area_level 5]
		if self.attackTwice then
			msg.post("#", "stop_attackTwice")
		end
	end
end

local function play_bg_music(enable)
	local control
	if enable then
		control = "play_sound"
	else
		control = "stop_sound"
	end
	if area_level >= 1 and area_level <= 3 then
		msg.post("loader:/go_audio#bg_enemy13", control)
	elseif area_level == 4 then
		msg.post("loader:/go_audio#bg_enemy4", control)
	elseif area_level == 5 then
		msg.post("loader:/go_audio#bg_enemy5", control)
	end
end

local function to_level()
	bg_music_isPlay = false
	msg.post("loader:/go_audio#bg_menu", "play_sound")
	play_bg_music(false)
	msg.post("/go_in_game#fading", "do_fade_out", { screen = "level_via_in_game", release_input = true })
	msg.post("level:/go_level#fading", "zero_alpha")
	msg.post("level:/go_level#level", "arena_text_disable")
	msg.post("level:/go_pick_level#level_area", "level_btn_disable")
end

local function restart_game()
	if threshold_music and area_level == 3 then -- threshold music play
		play_bg_music(false)
	elseif area_level == 4 or area_level == 5 then
		play_bg_music(false)
	end
	msg.post("/go_in_game#fading", "do_fade_out", { screen = "restart_in_game", release_input = true })
end

local function to_next_level()
	msg.post("/enemy#script", "next_level")
	threshold_music = true
	restart_game()
end

local function set_button(self)
	if area_level == 1 then
		self.plus_btn.pos(vmath.vector3(360,39,0))
		self.min_btn.pos(vmath.vector3(440,39,0))
		self.mul_btn.enable(false)
		self.div_btn.enable(false)
	elseif area_level == 2 then
		self.plus_btn.pos(vmath.vector3(320,39,0))
		self.min_btn.pos(vmath.vector3(400,39,0))
		self.mul_btn.pos(vmath.vector3(480,39,0))
		self.div_btn.enable(false)
	else
		random_button(self)
	end
end

local function max_garbage(self, amount)
	if not self.max_gc then
		self.max_gc = amount
	else
		if amount > self.max_gc then
			self.max_gc = amount
		end
	end
	return self.max_gc
end

local function calculate_score(self, data)
	local bonus_score = math.ceil((self.player_hp / self.player_max_hp * 250))
	if area_level <= 5 then
		temp_result = math.floor((data * 100) + (150 * area_level / 5)) + bonus_score
	end
end

local function save_score(self)
	if temp_result > scores[area_level] then
		scores[area_level] = temp_result
		print "new score saved"
	else
		print "score not saved"
	end
end

function init(self)
	-- acquire_input_focus is on from fading
	print "init from in_game.gui_script"
	msg.post("/go_in_game#fading", "do_fade_in")
	reset_tick(self)
	self.isTimeEnd = false
	self.time_node = gui.get_node("time_text")
	self.question_node = gui.get_node("question_text")
	self.player_hp_node = gui.get_node("player_hp/health")
	self.enemy_hp_node = gui.get_node("enemy_hp/health")
	bg_game_end(self, false) -- init setting black_bg
	gui.set_text(gui.get_node("level_text"), "Level "..area.."-"..area_level)

	-- make button UI
	self.menu_btn = create_sprite_button(gui.get_node("menu/btn_node"), "Button_Menu", to_level)
	self.menu2_btn = create_sprite_button(gui.get_node("menu_via_failed/btn_node"), "Button_Menu", to_level)
	self.restart_btn = create_sprite_button(gui.get_node("repeat/btn_node"), "Button_Restart", restart_game)
	self.restart_next_btn = create_sprite_button(gui.get_node("repeat_next/btn_node"), "Button_Restart", restart_game)
	self.nextlvl_btn = create_sprite_button(gui.get_node("next/btn_node"), "Button_Next", to_next_level)
	if area_level == 5 then -- no next btn in last level in area
		self.nextlvl_btn.enable(false)
	end
	self.startgame_btn = create_sprite_button(gui.get_node("confirm/btn_node"), "black_button", function()
		if not self.game_start then
			self.game_start = true
			msg.post("/go_in_game#script", "generate_question")
			self.startgame_btn.enable(false)
			gui.set_enabled(gui.get_node("level_info_box"), false)
		end
	end)

	self.plus_btn = create_sprite_button(gui.get_node("btn1/btn_node"), "Button_Ungu", function()
		self.picked_btn = 1
		do_attack(self, 1)
	end)
	self.min_btn = create_sprite_button(gui.get_node("btn2/btn_node"), "Button_Hijau", function()
		self.picked_btn = 2
		do_attack(self, 1)
	end)
	self.mul_btn = create_sprite_button(gui.get_node("btn3/btn_node"), "Button_Merah", function()
		self.picked_btn = 3
		do_attack(self, 1)
	end)
	self.div_btn = create_sprite_button(gui.get_node("btn4/btn_node"), "Button_Kuning", function()
		self.picked_btn = 4
		do_attack(self, 1)
	end)
	
	-- debug setting label name
	local player_name_node = gui.get_node("player_hp/name_text")
	gui.set_text(player_name_node, username)

	set_button(self)
	-- setup background music
	if not bg_music_isPlay and (area_level >= 1 and area_level <= 3) then
		play_bg_music(true) -- play music in init
		bg_music_isPlay = true
	elseif area_level == 4 or area_level == 5 then
		play_bg_music(true)
		bg_music_isPlay = false
	end
	-- setting fact reward
	msg.post("/go_in_game#fact_script", "get_fact_info", {index = area_level})

	self.reset_timer = function(object)
		print(object,"got attacked")
		reset_tick(self)
		if area_level == 5 and self.attackTwice then
			msg.post("/go_in_game#script", "reset_timer")
		elseif (object == "enemy" or area_level < 5) and object ~= "player" then
			msg.post("/go_in_game#script", "reset_timer")
		elseif object == "player" and second == 0 and area_level ~= 5 then
			msg.post("/go_in_game#script", "reset_timer")
		end
	end
end

function update(self, dt)
	if self.game_start and not self.isTimeEnd and is_no_dead(self) and not self.freeze_time then
		calculate_score(self, second - self.tick)
		self.tick = self.tick + dt
		if self.tick > 1 then
			second = second - 1
			reset_tick(self)
			gui.set_text(self.time_node, second)
			if second == 0 then
				--[[self.isTimeEnd = true
				bg_game_end(self, true, "lose")]]
				print "time's up!"
				
				self.picked_btn = -1
				do_attack(self, 1)
			end
		end
	end
	-- @debug check Garbage Collect every tick
	--msg.post("@render:", "draw_text", { text = "GC: " .. max_garbage(self, collectgarbage("count") * 1024), position = vmath.vector3(10, 20, 0) })
end

local function button_operation_controller(self, action_id, action)
	self.plus_btn.on_input(action_id, action)
	self.min_btn.on_input(action_id, action)
	self.mul_btn.on_input(action_id, action)
	self.div_btn.on_input(action_id, action)
end

function on_input(self, action_id, action)
	-- button in operator input
	if self.game_start and not self.isTimeEnd and is_no_dead(self) and not self.freeze_time and
	not is_player_dead(self) then
		button_operation_controller(self, action_id, action)
	end
	-- try listener btn
	self.menu_btn.on_input(action_id, action)
	self.menu2_btn.on_input(action_id, action)
	self.restart_btn.on_input(action_id, action)
	self.restart_next_btn.on_input(action_id, action)
	self.nextlvl_btn.on_input(action_id, action)
	self.startgame_btn.on_input(action_id, action)

	if (action_id == hash("esc") or action_id == hash("back")) and action.pressed then
		self.game_start = false
		bg_music_isPlay = false
		to_level()
		msg.post(".", "release_input_focus") -- make sure no input captured
	end
end

function on_message(self, message_id, message, sender)
	-- @from game.script
	if message_id == hash("set_timer") then
		second = message.timer
		gui.set_text(self.time_node, second)
	end
	-- @from game.script
	if message_id == hash("set_answer") then
		gui.set_text(self.question_node, message.question)
		self.answer = message.answer
		print("question type: ", self.answer + 1) -- (+1) for make it clear to trace
	end
	-- @from player.script
	if message_id == hash("set_player_hp") then
		self.player_hp = message.hp
		self.player_max_hp = message.hp
	end
	-- @from enemy.script
	if message_id == hash("set_enemy_hp") then
		self.enemy_hp = message.hp
		self.enemy_max_hp = message.hp
	end
	-- @from enemy.script
	if message_id == hash("set_enemy_name") then
		local enemy_name_node = gui.get_node("enemy_hp/name_text")
		gui.set_text(enemy_name_node, message.name)
	end
	-- @from player.script
	if message_id == hash("player_hp_anim") then
		gui.animate(self.player_hp_node, "scale.x", self.player_hp / self.player_max_hp, gui.EASING_LINEAR, 0.5, 0, function()
			if is_player_dead(self) then
				print "enemy win!"
				bg_game_end(self, true, "lose")
			else
				self.reset_timer("player") -- reset time when time end
			end
			--self.freeze_time = false -- this take responsible
			if area_level ~= 5 then
				self.freeze_time = false
			end
			-- TODO: behaviour question
			if area_level == 5 and not self.attackTwice then
				random_button(self)
				player_damaged(self, 1)
				gui.animate(gui.get_node("level_text"), "scale.z", 0.5, gui.EASING_LINEAR, 0.1, 0.65, function()
					self.freeze_time = false
				end)
				self.attackTwice = true
			end
		end)
	end
	-- @from this script
	if message_id == hash("stop_attackTwice") then
		self.attackTwice = false
	end
	-- @from enemy.script
	if message_id == hash("enemy_hp_anim") then
		gui.animate(self.enemy_hp_node, "scale.x", self.enemy_hp / self.enemy_max_hp, gui.EASING_LINEAR, 0.5, 0, function()
			if not is_enemy_dead(self) then
				-- TODO: behaviour question
				self.reset_timer("enemy")
				
				msg.post("/go_in_game#script", "generate_question")
				if area_level >= 4 then
					random_button(self)
				end
			else
				print "player win!"
				save_score(self) -- saving score
				print("result: ",temp_result) -- debug
				
				msg.post("/enemy#script", "level_up")
				bg_game_end(self, true, "win") -- call win panel
			end
			self.freeze_time = false
		end)
	end
	if message_id == hash("set_fact_info") then
		local fact_node = gui.get_node("fact_text")
		gui.set_text(fact_node, message.info)
	end
end"/assets/in_game/in_game.gui_scriptÑ^LJ #=/assets/in_game/in_game.gui_script  =+  7    % 4  >4 	 %
 $	
	> ? À2	hashspritecreateButton node  released_animation  callback   F  
+  7    @ ÀcreateButton node  callback   Ø  
bÓ-2 4  7% >;4  7% >;4  7% >;4  7% > <  2 4  78>;4  78>;4  78>;4  78> <  2  '  ' '  ) 4 7'	 '
 >; '  TQ4 7'	 '
 >  T	  TQ6 T) Tõ  T966	6		9	6	9	'  ) TÞ' '	 '
 I4  7	66>KúG  set_positionrandom	mathget_positionbtn4/btn_nodebtn3/btn_nodebtn2/btn_nodebtn1/btn_nodeget_nodegui	À					




 !!!""#%&&))))+++++)-self  cbtn_nodes Mbtn_poses 8tab_operators 7idx 6filled 5temp_val 4is_duplicate 3temp_pos   i  &   ='  :  G  	tickself   ³ 
  -LA  T T4 7 % $>4 7 % 'Ò 4 7'	 >7   T4 7	4 7%
 >% >T4 %  % >4 74 7% > >G  dim_bg/bgset_enabled, no panel detectedsetting bg: 
printNO MORE HEALTHlabel_textset_textisTimeEndEASING_OUTBOUNCEposition.yanimate	_boxget_nodegui	losewin







self  .is_on  .panel  .node  I  	N7  	  T) H T) H G  enemy_hp self  
 J  	V7  	  T) H T) H G  player_hp self  
 ó  &7^4  7% % >7 (   T7 '   T7 : T'  : 4 % >7   T) : 4  7% %	 >T4 %
 >G  !player_hp is less or equal 0do_fire/enemy#scriptfreeze_timeplayer blow's up
printplayer_hpplay_sound loader:/go_audio#enemy_wave	postmsg÷Ñðúáõý			

self  'amount  ' ¢  	/p7  (   T7  '   T7  :  T'  :  4 % >) : 4 7% % >T4 % >G   enemy_hp is less or equal 0do_fire/player#script	postmsgfreeze_timeenemy blow's up
printenemy_hp÷Ñðúáõý						self  amount      5+    >  T+   >  T) H T) H G  
À	Àis_player_dead is_enemy_dead self    'b7   7  T4 7% % >4 % >+     >T4 % > 4	 	 T+    >7
   T4 7% % >G  ÀÀstop_attackTwice#attackTwicearea_levelwrong flagcorrect flag
printplay_soundloader:/go_audio#fire	postmsgpicked_btnanswer
			
enemy_damaged player_damaged self  (damage  (new_damage  Û  &:)     T%  T% 4 '  T
4 '  T4 7%  >T4 	  T4 7%  >T4 	 T4 7%  >G  loader:/go_audio#bg_enemy5loader:/go_audio#bg_enemy4 loader:/go_audio#bg_enemy13	postmsgarea_levelstop_soundplay_sound
			





enable  'control % À    /«)  5   4  7  % % > +   ) > 4  7  % % 3 > 4  7  % %	 > 4  7  %
 % > 4  7  % % > G  Àlevel_btn_disable$level:/go_pick_level#level_areaarena_text_disablelevel:/go_level#levelzero_alphalevel:/go_level#fading release_inputscreenlevel_via_in_gamedo_fade_out/go_in_game#fadingplay_soundloader:/go_audio#bg_menu	postmsgbg_music_isPlayplay_bg_music    9µ+      T4   	   T +  ) > T 	4     T 4   	  T +  ) > 4  7  % % 3 > G  À release_inputscreenrestart_in_gamedo_fade_out/go_in_game#fading	postmsgarea_level
threshold_music play_bg_music  |   	'¾4   7  % % > /  +  > G  Ànext_level/enemy#script	postmsgthreshold_music restart_game  Ã 	E[Ä4  	  T7 74 7'h'' '  > = 7 74 7'¸'' '  > = 7 7) >7 7) >T&4  	 T 7 74 7'@'' '  > = 7 74 7''' '  > = 7 74 7'à'' '  > = 7 7) >T+    >G  Àdiv_btnenablemul_btnmin_btnvector3
vmathposplus_btnarea_level									




random_button self  F Z   Ô	7    T:  T7   T:  7  H max_gcself  amount   Þ ?ß4  77 7 ! >4 '  T
4  74 >,  G  
floorarea_levelplayer_max_hpplayer_hp	ceil	mathôÈ¬
temp_result self  data  bonus_score  ³  &æ+  4  4 6 T4  4 +  94 % >T4 % >G  score not savednew score saved
printarea_levelscorestemp_result self       +   7      T +   ) :  4  7  % % > +   7  7  ) > 4  7  4 7	%
 >) > G   Àlevel_info_boxget_nodeset_enabledguienablestartgame_btngenerate_question/go_in_game#script	postmsggame_startself  R   +   ' :  +  +  ' > G   À picked_btnself do_attack  R   +   ' :  +  +  ' > G   À picked_btnself do_attack  R   +   ' :  +  +  ' > G   À picked_btnself do_attack  R   +   ' :  +  +  ' > G   À picked_btnself do_attack   
0Q¯
4    % >+  + >4 	  T
+ 7  T4 7% % >T  T4 '  T 	 T4 7% % >T 	 T+ 	 T4   T4 7% % >G     À	 player
enemyreset_timer/go_in_game#script	postmsgattackTwicearea_levelgot attacked
print
 
reset_tick self second object  1 ÿ
BÆÝïK4  % >4 7% % >+    >) : 4 7	%
 >: 4 7	% >: 4 7	% >: 4 7	% >: +   ) >4 74 7	% >% 4 % 4 $>+ 4 7	% >% + >: + 4 7	% >% + >: + 4 7	% >% + >: + 4 7	%  >% + >: + 4 7	%" >%# + >:! 4 	  T7! 7$) >+ 4 7	%& >%' 1( >:% + 4 7	%* >%+ 1, >:) + 4 7	%. >%/ 10 >:- + 4 7	%2 >%3 14 >:1 + 4 7	%6 >%7 18 >:5 4 7	%9 >4 7 4: >+   >4;   T4 '  T
4 '  T+ ) >) 5; T4  T4 	  T+ ) >) 5; 4 7%< %= 3> 4 :?>1A :@ 0  G  ÀÀÀÀÀÀÀÀÀ  reset_timer
index  get_fact_info/go_in_game#fact_scriptbg_music_isPlayusernameplayer_hp/name_text Button_Kuningbtn4/btn_nodediv_btn Button_Merahbtn3/btn_nodemul_btn Button_Hijaubtn2/btn_nodemin_btn Button_Ungubtn1/btn_nodeplus_btn black_buttonconfirm/btn_nodestartgame_btnenableButton_Nextnext/btn_nodenextlvl_btnrepeat_next/btn_noderestart_next_btnButton_Restartrepeat/btn_noderestart_btnmenu_via_failed/btn_nodemenu2_btnButton_Menumenu/btn_nodemenu_btnarea_level-	areaLevel level_textset_textenemy_hp/healthenemy_hp_nodeplayer_hp/healthplayer_hp_nodequestion_textquestion_nodetime_textget_nodeguitime_nodeisTimeEnddo_fade_in/go_in_game#fading	postmsg!init from in_game.gui_script
print
					



""######&#&''''''*'*++++++.+.11112222244466666666666777888999999:::;;>>>>>>>>JJKKreset_tick bg_game_end create_sprite_button to_level restart_game to_next_level do_attack set_button play_bg_music second self  Çplayer_name_node 0 ³ 
3w¼7    T/7   T,+    >  T'7   T$+   + 7 >7 : 7 '  T+  , +   >4 77 + >+ 	 T	4 % >'ÿÿ:	 +   ' >G  ÀÀ ÀÀpicked_btntime's up!
printtime_nodeset_textgui	tickfreeze_timeisTimeEndgame_start is_no_dead calculate_score second reset_tick do_attack self  4dt  4 »   2Ò7  7  >7 7  >7 7  >7 7  >G  div_btnmul_btnmin_btnon_inputplus_btnself  action_id  action   ´  O«Ù7    T7   T+    >  T7   T
+   >  T+     >7 7  >7 7  >7 7  >7 7  >7 7  >7	 7  >4
 % > T4
 % > T7  T) :  ) 5 + >4 7% % >G  À
ÀÀÀrelease_input_focus.	postmsgbg_music_isPlaypressed	backesc	hashstartgame_btnnextlvl_btnrestart_next_btnrestart_btnmenu2_btnon_inputmenu_btnfreeze_timeisTimeEndgame_start					




is_no_dead is_player_dead button_operation_controller to_level self  Paction_id  Paction  P 3   
+   ) :  G   freeze_timeself   8v+   + >    T	4   % > +  + ) % > T +  7  % > 4     T +  ) : 4  	   T +  7     T +  + > +  + ' > 4  7 	 4 7
% >% ( 4 7( ( 1 > +  ) : G    À    EASING_LINEARscale.zlevel_textget_nodeanimateguiattackTwicefreeze_timearea_levelplayerreset_timer	loseenemy win!
print
ÿµæÌ³æý³æÌÌÿ			is_player_dead self bg_game_end random_button player_damaged  Ï   .s¨+   + >    T +  7   % > 4  7  % % > 4  '   T +  + > T 4  % > +  + > 4  %	 + > 4  7  %
 % > +  + ) % > +  ) : G    À    freeze_timewinlevel_up/enemy#scriptresult: player win!
printarea_levelgenerate_question/go_in_game#script	postmsg
enemyreset_timer


is_enemy_dead self random_button save_score temp_result bg_game_end   	%x¢ïQ4  % > T7,  4 77 +  >4  % > T4 77 7>7	:	 4
 % 7	  >4  % > T7: 7: 4  % > T7: 7: 4  % > T	4 7% >4 7 7>4  % > T4 77 % 7 7 !4 7(	 '
  1 >4  % > T) : 4  % > T4 77  % 7 7 !4 7(	 '
  1! >4  %" > T	4 7%# >4 7 7$>0  G   
ÀÀÀÀ	ÀÀ	infofact_textset_fact_info enemy_hp_nodeenemy_hp_animattackTwicestop_attackTwice EASING_LINEARscale.xplayer_hp_nodeanimateplayer_hp_anim	nameenemy_hp/name_textget_nodeset_enemy_nameenemy_max_hpenemy_hpset_enemy_hpplayer_max_hphpplayer_hpset_player_hpquestion type: 
printanswerquestionquestion_nodeset_answertime_nodeset_textgui
timerset_timer	hashÿ		




144444558888899999999999K9MMMMMNNNNOOOOOQQsecond is_player_dead bg_game_end random_button player_damaged is_enemy_dead save_score temp_result self  ymessage_id  ymessage  ysender  yenemy_name_node 9fact_node 9 ¬   $À À'  '  ) 4  % >1 1 1 1 1 1	 1
 1	 1
 1 1 1 1 1 1 1 1 1 1 1 5 1 5 1 1 5 1 5 0  G  on_message on_input  update 	init                    main/gui_buttonrequire        ; ? L T \ n }   © ³ ¼ Â Ò Ý ä í :ï P<WmYÀoÀÀsecond #temp_result "threshold_music !Button create_sprite_button create_scale_button random_button reset_tick bg_game_end is_enemy_dead is_player_dead player_damaged enemy_damaged is_no_dead do_attack play_bg_music to_level restart_game to_next_level set_button max_garbage calculate_score save_score button_operation_controller   main/gui_button/main/gui_button.luac" 